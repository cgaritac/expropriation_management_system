@using GestionExpropaciones.Common
@using GestionExpropaciones.Common.Helpers
@using GestionExpropaciones.Common.Enums;
@inject Constants Constants
@model GestionExpropaciones.Models.FileModel
@{
    List<ProjectModel> projectList = ViewBag.ProjectList;
}

<form asp-controller="Files" asp-action="Edit" method="post" class="form-container ">
    <div class="menu-container">
        <input type="hidden" asp-for="Id" />

        <section class="d-flex justify-content-between fw-bold mt-4">
            <div class="form-group">
                <label asp-for="Number" class="form-label">@Constants.NumberText</label>
                <input asp-for="Number" class="form-control" id="numberInput" disabled />
                <div class="validation-texts">
                    <span asp-validation-for="Number" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Project_Number" class="form-label">N° Proyecto@(Constants.RequiredDerorator)</label>
                <select asp-for="Project_Number" class="form-select" id="projectnumberInput" disabled>
                    <option value="">Seleccione un proyecto</option>
                    @foreach (ProjectModel project in projectList)
                    {
                        <option value="@project.Number">@project.Name</option>
                    }
                </select>
                <div class="validation-texts">
                    <span asp-validation-for="Project_Number" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Fase" class="form-label">@Constants.FaseText</label>
                <select asp-for="Fase" class="form-select" id="faseInput" disabled >
                    @foreach (FaseEnum fase in Enum.GetValues(typeof(FaseEnum)))
                    {
                        <option value="@((int)fase)" selected="@(Model.Fase == fase ? "selected" : null)">
                            @EnumHelper.GetEnumDescription(fase)
                        </option>
                    }
                </select>
                <div class="validation-texts">
                    <span asp-validation-for="Fase" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Status" class="form-label">@Constants.StatusText</label>
                <select asp-for="Status" class="form-select" id="statusInput" disabled >
                    @foreach (StatusEnum status in Enum.GetValues(typeof(StatusEnum)))
                    {
                        <option value="@((int)status)" selected="@(Model.Status == status ? "selected" : null)">
                            @EnumHelper.GetEnumDescription(status)
                        </option>
                    }
                </select>
                <div class="validation-texts">
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            </div>
        </section>        

        <section class="d-flex justify-content-between fw-bold mt-2">
            <div class="form-group">
                <label asp-for="Start_Date" class="form-label">@Constants.StartDateText</label>
                <input asp-for="Start_Date" type="date" asp-format="{0:yyyy-MM-dd}" class="form-control" id="startDateInput" disabled />
                <div class="validation-texts">
                    <span asp-validation-for="Start_Date" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Finish_Date" class="form-label">@Constants.FinishDateText</label>
                <input asp-for="Finish_Date" type="date" class="form-control" id="finishDateInput" disabled />
                <div class="validation-texts">
                    <span asp-validation-for="Finish_Date" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Section" class="form-label">Sección</label>
                <input class="form-control" type="text" asp-for="Section" id="sectionInput" disabled />
                <div class="validation-texts">
                    <span asp-validation-for="Section" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Km" class="form-label">Kilómetro</label>
                <input class="form-control" type="text" asp-for="Km" id="kmInput" disabled />
                <div class="validation-texts">
                    <span asp-validation-for="Km" class="text-danger"></span>
                </div>
            </div>
        </section>

        <div class="form-group fw-bold mt-4">
            <label asp-for="Comments" class="form-label">@Constants.CommentsText</label>
            <textarea class="form-control" rows="4" asp-for="Comments" id="commentsInput" disabled></textarea>
            <div class="validation-texts">
                <span asp-validation-for="Comments" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-between">
        <a class="btn btn-secondary mt-3 fw-bold regular-button" type="button" asp-controller="Files" asp-action="Index" method="get" title="Regresar">
            @IconHelper.ReturnIcon()
        </a>
        <div class="mt-3">
            <button class="btn custom-button-delete me-3 text-white fw-bold d-none" type="button" title="Cancelar" id="cancelButton">
                @IconHelper.CancelIcon()
            </button>
            <button class="btn custom-button-edit fw-bold" type="button" title="Editar" id="editButton">
                @IconHelper.EditIcon()
            </button>
            <button class="btn custom-button-create fw-bold d-none" type="submit" title="Guardar" id="saveButton">
                @IconHelper.SaveIcon()
            </button>
        </div>        
    </div>
</form>