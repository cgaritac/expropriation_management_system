// <auto-generated />
using System;
using GestionExpropaciones.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionExpropaciones.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250128082835_Changes_in_file_model")]
    partial class Changes_in_file_model
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionExpropaciones.Models.CadastralMapModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<string>("Cadastral_Map")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Canton")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<int>("Id_File")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<int>("Province")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("CadastralMapModel");
                });

            modelBuilder.Entity("GestionExpropaciones.Models.ExpropietedPropertyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Annotation")
                        .HasColumnType("int");

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<string>("Cadastral_Map")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Canton")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<int>("Id_File")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Property_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Province")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.ToTable("ExpropietedPropertyModel");
                });

            modelBuilder.Entity("GestionExpropaciones.Models.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comments");

                    b.Property<string>("Created_By")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<int>("Fase")
                        .HasColumnType("int")
                        .HasColumnName("Fase");

                    b.Property<DateOnly?>("Finish_Date")
                        .HasColumnType("date")
                        .HasColumnName("Finish_Date");

                    b.Property<int>("Id_Expropiation_Type")
                        .HasColumnType("int");

                    b.Property<int>("Id_Finance_Data")
                        .HasColumnType("int");

                    b.Property<int>("Id_Legal_Data")
                        .HasColumnType("int");

                    b.Property<int>("Id_Project_Data")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Active");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Number");

                    b.Property<DateOnly>("Start_Date")
                        .HasColumnType("date")
                        .HasColumnName("Start_Date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("Files", (string)null);
                });

            modelBuilder.Entity("GestionExpropaciones.Models.OwnerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identification_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<string>("Last_Name1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Name2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Owner_Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OwnerModel");
                });

            modelBuilder.Entity("GestionExpropaciones.Models.PropertyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Annotation")
                        .HasColumnType("int");

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<int>("Canton")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<int>("Id_File")
                        .HasColumnType("int");

                    b.Property<int>("Id_Owner")
                        .HasColumnType("int");

                    b.Property<bool>("Is_Active")
                        .HasColumnType("bit");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Property_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Province")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileId");

                    b.HasIndex("OwnerId");

                    b.ToTable("PropertyModel");
                });

            modelBuilder.Entity("GestionExpropaciones.Models.CadastralMapModel", b =>
                {
                    b.HasOne("GestionExpropaciones.Models.FileModel", "File")
                        .WithMany("Maps")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("GestionExpropaciones.Models.ExpropietedPropertyModel", b =>
                {
                    b.HasOne("GestionExpropaciones.Models.FileModel", "File")
                        .WithMany("ExpropietedProperties")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("GestionExpropaciones.Models.PropertyModel", b =>
                {
                    b.HasOne("GestionExpropaciones.Models.FileModel", "File")
                        .WithMany("Properties")
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionExpropaciones.Models.OwnerModel", "Owner")
                        .WithMany("Properties")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("GestionExpropaciones.Models.FileModel", b =>
                {
                    b.Navigation("ExpropietedProperties");

                    b.Navigation("Maps");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("GestionExpropaciones.Models.OwnerModel", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
